SQLModel
========

The ***SQLModel*** package allows to use a Go script to define a database model
and so to generate its corresponding SQL language and Go types. It is not an ORM
neither it isn't goint to be it since an ORM creates an extra layer to the
database access.

The API is based in [SQLAlchemy's][4] and here they are all [SQLAlchmey's
types][5], althought I've only added these basic types:

+ Blob
+ Boolean
+ Float
+ Integer
+ Text

At generating SQL, it creates an extra table (that starts wich ***_***) for
each model; it is for stuff related to localization.  
And when is generated the file Go, it's used ***_*** as package name so rename
it at your project's name.

***NOTE:*** it is tested with SQLite3, and you have in mind that it isn't ready
to working with relations between tables since I don't need it by now.


[4]: http://www.sqlalchemy.org/
[5]: http://www.sqlalchemy.org/docs/core/types.html


## Installation

	$ goinstall github.com/kless/SQLModel/sqlmodel

To use the Go scripts there is to install [Goscript][6].


[6]: https://github.com/kless/goscript


## Configuration

Nothing.


## Operating instructions

Read the Go script *example.gos* in directory *test*. The files generated from
that script are *model.sql* and *model.go*.


## Copyright and licensing

***Copyright 2010  The "SQLModel" Authors***  
See file AUTHORS and CONTRIBUTORS (if any).

Licensed under **Simplified BSD License**.  
See file LICENSE.


## Contact

To contact, send e-mail through [github][1].


## Known bugs

To reporting bugs, please login and create a new issue [here][2].


## Credits and acknowledgments

For credits, see file AUTHORS and CONTRIBUTORS (if any).


## ChangeLog

For changes between releases, see file NEWS; and for changes between the commits,
see the [commit history][3].


* * *
*Generated by [gowizard](http://github.com/kless/gowizard)*


[1]: http://github.com/kless
[2]: http://github.com/kless/SQLModel/issues
[3]: http://github.com/kless/SQLModel/commits/master

